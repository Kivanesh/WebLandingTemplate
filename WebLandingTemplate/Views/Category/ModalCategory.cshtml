@model WebLandingTemplate.Models.CategoryVM
  
<div class="modal-body form-control-file">
    <div class="row-fluid form-group col-md-12">

        <div class="row">
            <div class="portlet-box portlet-gutter ui-buttons-col mb-30">
                <div class="portlet-header flex-row flex d-flex align-items-center b-b">
                    <div class="flex d-flex flex-column">
                        <h3>@ViewBag.ModalName</h3>
                    </div>
                </div>
                <div class="portlet-body">
                    <form method="post" action="@Url.Action("Create", "Category")" id="category-form">
                        <div class="form-body">
                            <div class="form-row">
                                <div class="col-md-5 mb-3">
                                    <div class="input-icon-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="input-icon-append">
                                            <i class="fa fa-user"></i>
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5 mb-3">
                                    <div class="input-icon-group">
                                        @Html.LabelFor(model => model.ItemCodeType, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="input-icon-append">
                                            <i class="fa fa-bookmark"></i>
                                            @Html.EnumDropDownListFor(model => model.ItemCodeTypeEnum, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ItemCodeType, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div><!--row-->
                            @Html.HiddenFor(model => model.CategoryId)
                            @Html.HiddenFor(model => model.ItemCodeType)
                            <div class="result"></div><!-- end .result  section -->
                        </div><!-- end .form-body section -->
                        <div class="form-footer">
                            <div class="float-left">
                                <button type="submit" data-btntext-sending="Sending..." class="button btn btn-primary"><span><i class="fa fa-paper-plane" aria-hidden="true"></i> </span>Enviar</button>
                                <button type="reset" class="button btn btn-warning"><span><i class="fa fa-eraser" aria-hidden="true"></i> </span> Limpiar </button>
                            </div>
                        </div><!-- end .form-footer section -->
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="modal-footer">
            <button type="button" id="CancelModal" class="button btn-danger rounded" data-dismiss="modal"><span><i class="fa fa-window-close" aria-hidden="true"></i> </span>Cerrar</button>
        </div>
    </div>


</div>

<script type="text/javascript">

    jQuery(document).ready(function ($) {

        $('#ItemCodeTypeEnum').on('change', function (e) {
            e.preventDefault();
            console.log("Le diste click ");
            console.log('You selected: ', this.value);
            $('#ItemCodeType').val(this.value);
            $('#CategoryId').val(369);
            console.log("Salio del JS chage");
        });

        $("#category-form").validate({
						/* validation states + elements
						------------------------------------------- */
						errorClass: "state-error",
						validClass: "state-success",
						errorElement: "em",
						onkeyup: false,
						onclick: false,
						/* validation rules
						------------------------------------------ */
						rules: {
                                Name: {
										required: true,
										minlength: 5
								},
                                ItemCodeTypeEnum: {
                                    required: true,
                                    
                                },
                                ItemCodeType: {
                                    required: true,
                                    
                                }
						},
						messages:{
                                categoryname: {
										required: 'Enter your name',
										minlength: 'Name must be at least {0} characters'
								},
                                ItemCodeTypeEnum: {
										required: 'Selecciona una Opcion',
										default: 'Enter a VALID option'
                                },
                                ItemCodeType: {
                                    required: 'Selecciona una Opcion',
                                    default: 'Enter a VALID option'
                                }

						},
						/* validation highlighting + error placement
						---------------------------------------------------- */
						highlight: function(element, errorClass, validClass) {
                            $(element).closest('.field').addClass(errorClass).removeClass(validClass);
                            $(element).addClass("error");
                            console.log("This shit Get into The Validation: 1");
						},
						unhighlight: function(element, errorClass, validClass) {
                            console.log("This shit Get into The Validation: 2");
                            $(element).closest('.field').removeClass(errorClass).addClass(validClass);
                            $(element).removeClass("error");
                            $(element).addClass("valid");
                            
						},
						errorPlacement: function(error, element) {
                            if (element.is(":radio") || element.is(":checkbox")) {
                                console.log("This shit Get into The Validation: 3");
                               element.closest('.option-group').after(error);

                            } else {
                                console.log("This shit Get into The Validation: 4");
									error.insertAfter(element.parent());
						   }
						},

						/* ajax form submition
						---------------------------------------------------- */
      //                  submitHandler: function (form) {
      //                    /*---------------------------------------------------- Build Model from InputForm Template ADD by Kvnsh */
      //                      //var itemVM = {

      //                      //}
      //                      //var messageVM = {
      //                      //    Subject : sendersubject.value,
      //                      //    Email : emailaddress.value,
      //                      //    ContactName : sendername.value,
      //                      //    Message : sendermessage.value,
      //                      //    Phone: senderphone.value,
      //                      //    ContactDate: document.getElementById("messageVM_ContactDate").value,
      //                      //    ComeFrom: document.getElementById("messageVM_ComeFrom").value
      //                      //}
      //                      //var PageVM = {
      //                      //    "messageVM" : messageVM
      //                      //}
      //                      //console.log(PageVM);
      //                      console.log('HeRe are You u.u');
      //                      console.log(form);
      //                       /*---------------------------------------------------- */
      //                      $(form).ajaxSubmit({
      //                              data: form,
						//		    target:'.result',
						//			beforeSubmit:function(){
						//					swapButton();
						//					$('.form-footer').addClass('progress');
						//			},
						//			error:function(){
						//					swapButton();
						//					$('.form-footer').removeClass('progress');
						//			},
						//			 success:function(){
						//				 	swapButton();
						//					$('.form-footer').removeClass('progress');
						//					$('.alert-success').show().delay(7000).fadeOut();
						//					$('.field').removeClass("state-error, state-success");
						//					if( $('.alert-error').length == 0){
						//						$('#smart-form').resetForm();
						//						reloadCaptcha();
						//					}
						//			 }
						//	  });
						//}

				});



    });

</script>